How to create a component
1. ng g component/c <component_name>  

Binding:
1. Property Binding
    Name : {{name}} //interpolation
    we can use [] "box" syntax to do Property binding.
2. Event Binding
   we can use  () "Banana" syntax for event binding.


Built-in directives:
directives with * are structured directive.
it modifies the actual DOM.
1. *ngFor --  To bind an array.
2. *ngIf -- It will add or remove the element from DOM.
3. ngSwitch -- In case we want to remove /show dics based on some value.
4. ngClass -- in case we want to assign some class dynamically

Component Interaction:
What:
  communication between multiple components.
How:
1. Via HTML Tags
    1.@Input() decortaor to send data to other component. use property binding
    2.@Output() to send some data from child component.use event binding
l2. Via TypeScript
  1. @ViewChild : 
    Use this decorator to access one tag of same type, it will create an 
    instance of component in TS file.
  2. @ViewChildren : In case we have multipl tags of same type use this decorator.  
3. Via service


Component Lifecycle:
1. constructor: to inject services.
2. ngOnInit:  This event will be called after constructor, and best event to load some 
data from backend.
3. ngOnChanges : It will help us to track the input properties with child component.
4. ngDoCheck : This event will be called after init and after any event is fired.
Never implement ngOnChanges and ngDoCheck together.
5. ngAfterViewInit :Use this event to load data for ViewChilren component.
6. ngOnDestroy :  This event will be called when our component
get unloaded/destroyed.
